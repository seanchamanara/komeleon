{"ast":null,"code":"import firebase from 'firebase/app'; //database\n\nimport 'firebase/firestore'; //authentication\n\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyB7RjnupTvqEvHsxf8cQHoDOMOjdOFy1HA\",\n  authDomain: \"komeleon-db.firebaseapp.com\",\n  databaseURL: \"https://komeleon-db.firebaseio.com\",\n  projectId: \"komeleon-db\",\n  storageBucket: \"komeleon-db.appspot.com\",\n  messagingSenderId: \"645681682472\",\n  appId: \"1:645681682472:web:4bc7568af58761a7b57d1d\",\n  measurementId: \"G-VHJ18VKT57\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const collectionSnapshot = await collectionRef.get();\n  console.log({\n    collectionSnapshot\n  });\n  const snapShot = await userRef.get(); // console.log(snapShot)\n  //if user does not exsit create new userRef profile\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey); // console.log('cRef',collectionRef);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/seanc/Desktop/React_2019/komeleon/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","collectionSnapshot","get","console","log","snapShot","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB,C,CAGA;;AACA,OAAO,oBAAP,C,CAEA;;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,6BAFD;AAGXC,EAAAA,WAAW,EAAE,oCAHF;AAIXC,EAAAA,SAAS,EAAE,aAJA;AAKXC,EAAAA,aAAa,EAAE,yBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAEzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAGA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AACA,QAAMC,kBAAkB,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA;AAAD,GAAZ;AAIA,QAAMI,QAAQ,GAAG,MAAMV,OAAO,CAACO,GAAR,EAAvB,CAbyE,CAczE;AAEA;;AACA,MAAG,CAACG,QAAQ,CAACC,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBf,QAA/B;AACA,UAAMgB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMf,OAAO,CAACgB,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGf;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOkB,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCQ,KAAK,CAACC,OAAzC;AACH;AACJ;;AAED,SAAOlB,OAAP;AAEH,CAnCM;AAqCP,OAAO,MAAMmB,yBAAyB,GAAG,OACrCC,aADqC,EAErCC,YAFqC,KAGhC;AACL,QAAMjB,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqBe,aAArB,CAAtB,CADK,CAEL;;AAEA,QAAME,KAAK,GAAGrB,SAAS,CAACqB,KAAV,EAAd;AACAD,EAAAA,YAAY,CAACE,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGrB,aAAa,CAACF,GAAd,EAAlB;AAEAoB,IAAAA,KAAK,CAACN,GAAN,CAAUS,SAAV,EAAqBD,GAArB;AACH,GAJD;AAMA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AAEH,CAhBM;AAkBP,OAAO,MAAMC,IAAI,GAAGzC,QAAQ,CAACyC,IAAT,EAAb;AACP,OAAO,MAAM1B,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAM2B,QAAQ,GAAG,IAAI1C,QAAQ,CAACyC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAhC;AAEP,eAAe1C,QAAf","sourcesContent":["import firebase from 'firebase/app';\n\n\n//database\nimport 'firebase/firestore';\n\n//authentication\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyB7RjnupTvqEvHsxf8cQHoDOMOjdOFy1HA\",\n    authDomain: \"komeleon-db.firebaseapp.com\",\n    databaseURL: \"https://komeleon-db.firebaseio.com\",\n    projectId: \"komeleon-db\",\n    storageBucket: \"komeleon-db.appspot.com\",\n    messagingSenderId: \"645681682472\",\n    appId: \"1:645681682472:web:4bc7568af58761a7b57d1d\",\n    measurementId: \"G-VHJ18VKT57\"\n  };\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n \n    if(!userAuth) return;\n    \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n\n    const collectionRef = firestore.collection('users');\n    const collectionSnapshot = await collectionRef.get();\n    console.log({collectionSnapshot});\n\n\n\n    const snapShot = await userRef.get();\n    // console.log(snapShot)\n\n    //if user does not exsit create new userRef profile\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            });\n        } catch (error) {\n            console.log(\"Error creating user\", error.message)\n        }\n    }\n\n    return userRef;\n\n};\n\nexport const addCollectionAndDocuments = async (\n    collectionKey, \n    objectsToAdd\n    ) => {\n    const collectionRef = firestore.collection(collectionKey);\n    // console.log('cRef',collectionRef);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        \n        batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit();\n\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = ()  => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}