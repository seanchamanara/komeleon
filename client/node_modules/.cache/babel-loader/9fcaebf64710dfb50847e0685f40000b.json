{"ast":null,"code":"import UserActionTypes from './user.types';\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n}; ///state=INITIAL_STATE is checking if param state exists, if not set to INITIAL_STATE value (currentUser: null)\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return { ...state,\n        currentUser: null,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/seanc/Desktop/React_2019/komeleon/src/redux/user/user.reducer.jsx"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE"],"mappings":"AAAA,OAAQA,eAAR,MAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,KAAK,EAAE;AAFW,CAAtB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAe,CAACQ,eAArB;AAEI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAFjB;AAGHN,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKH,eAAe,CAACU,gBAArB;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,WAAW,EAAE,IAFV;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKH,eAAe,CAACW,eAArB;AACA,SAAKX,eAAe,CAACY,gBAArB;AAEI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFX,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAtBR;AAyBH,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import  UserActionTypes  from './user.types';\n\nconst INITIAL_STATE = {\n    currentUser: null,\n    error: null\n};\n\n///state=INITIAL_STATE is checking if param state exists, if not set to INITIAL_STATE value (currentUser: null)\nconst userReducer = (state = INITIAL_STATE, action) => {\n\n    switch (action.type) {\n        case UserActionTypes.SIGN_IN_SUCCESS:\n     \n            return {\n                ...state,\n                currentUser: action.payload,\n                error: null\n            };\n        case UserActionTypes.SIGN_OUT_SUCCESS:\n            return {\n                ...state,\n                currentUser: null,\n                error: null\n            };\n        case UserActionTypes.SIGN_IN_FAILURE:\n        case UserActionTypes.SIGN_OUT_FAILURE:\n\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n            return state;\n   \n    }\n};\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}