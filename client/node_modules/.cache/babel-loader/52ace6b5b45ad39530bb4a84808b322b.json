{"ast":null,"code":"var _jsxFileName = \"/Users/seanc/Desktop/React_2019/komeleon/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'; // import { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 26\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching,\n  isCollectionsloaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/seanc/Desktop/React_2019/komeleon/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","isFetchingCollections","isCollectionsloaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAE3B;;AAEDU,EAAAA,MAAM,GAAE;AAEN,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AACa,MAAA,MAAM,EAAGJ,KAAK,iBACd,oBAAC,8BAAD;AACC,QAAA,SAAS,EAAEG;AADZ,SACsCH,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AACa,MAAA,MAAM,EAAEJ,KAAK,iBACb,oBAAC,yBAAD;AACC,QAAA,SAAS,EAAEG;AADZ,SACsCH,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF;AAcD;;AA3BkC;;AA+BvC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC/CgB,EAAAA,qBAAqB,EAAEd,0BADwB;AAE/Ce,EAAAA,mBAAmB,EAAEd;AAF0B,CAAD,CAAhD;;AAOA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\n// import { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n    componentDidMount(){\n      const { fetchCollectionsStartAsync } = this.props;\n      fetchCollectionsStartAsync();\n\n    }\n\n    render(){\n      \n      const { match, isCollectionFetching } = this.props;\n   \n        \n      return (       \n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} \n                         render={ props => (\n                         <CollectionsOverviewWithSpinner \n                          isLoading={isCollectionFetching} {...props} /> )}\n            />\n            <Route path={`${match.path}/:collectionId`} \n                         render={props => (\n                         <CollectionPageWithSpinner \n                          isLoading={isCollectionFetching} {...props} />)}\n            />\n        </div>\n        ); \n    }\n} \n\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching,\n  isCollectionsloaded: selectIsCollectionsLoaded\n\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}